var Tesp;!function(Tesp){var PathEdge=function(){function PathEdge(target,cost,type){this.target=target,this.cost=cost,this.type=type}return PathEdge}(),PathNode=function(){function PathNode(node){this.node=node,this.dist=1/0}return PathNode}();importScripts("common.js"),onmessage=function(ev){var data=ev.data,spellCost=5,nodeMap={},feats=data.features.byName,nodes=data.nodes.filter(function(n){return!feats[n.type].disabled&&n!==data.source&&n!==data.destination}).map(function(n){return nodeMap[n.id]=new PathNode(n)}),source=new PathNode(data.source);source.dist=0,nodes.push(source),nodeMap[data.source.id]=source;var dest=new PathNode(data.destination);nodes.push(dest),nodeMap[data.destination.id]=dest;var maxCost=Tesp.Vec2.distance(data.source.pos,data.destination.pos);if(nodes.forEach(function(n){return n.edges=n.node.edges.filter(function(e){return!feats[e.destNode.type].disabled}).map(function(e){return new PathEdge(nodeMap[(e.srcNode===n.node?e.destNode:e.srcNode).id],e.cost,n.node.type)})}),nodes.forEach(function(n){return n.edges=n.edges.concat(nodes.filter(function(n2){return n2!==n&&!n.edges.some(function(e){return e.target===n2})}).map(function(n2){return new PathEdge(n2,Tesp.Vec2.distance(n.node.pos,n2.node.pos),"walk")}).filter(function(e){return e.cost<=maxCost}))}),null!=data.mark&&!feats.mark.disabled){var mn=new PathNode(data.mark);mn.edges=nodes.filter(function(n){return n!==source}).map(function(n){return new PathEdge(n,Tesp.Vec2.distance(mn.node.pos,n.node.pos),"walk")}).filter(function(e){return e.cost<maxCost}),source.edges.push(new PathEdge(mn,spellCost,"mark")),nodes.push(mn)}nodes.forEach(function(n){var cell=Tesp.Cell.fromPosition(n.node.pos);data.areas.forEach(function(a){if(!feats[a.target.type].disabled)if(Tesp.Area.containsCell(a,cell))n.edges.push(new PathEdge(nodeMap[a.target.id],spellCost,a.target.type));else{var closest,dist=1/0;a.rows.forEach(function(r){var v=new Tesp.Vec2(Math.max(Math.min(cell.x,r.x1+r.width),r.x1),Math.max(Math.min(cell.y,r.y+1),r.y)),alt=Tesp.Vec2.distance(cell,v);dist>alt&&(dist=alt,closest=v)});var pos=Tesp.Vec2.fromCell(closest.x,closest.y),cost=Tesp.Vec2.distance(n.node.pos,pos);if(maxCost>cost){var feat=data.features.byName[a.target.type],name=feat.name+" range of "+a.target.name,an=new PathNode(new Tesp.Node(name,name,pos,"area"));an.edges=[new PathEdge(nodeMap[a.target.id],spellCost,a.target.type)],nodes.push(an),n.edges.push(new PathEdge(an,cost,"walk"))}}})});for(var q=nodes.slice(),overhead=data.features.nodeOverhead;q.length>0;){q.sort(function(a,b){return b.dist-a.dist});for(var u=q.pop(),i=0;i<u.edges.length;i++){var e=u.edges[i],v=e.target,alt=u.dist+e.cost+overhead;alt<v.dist&&(v.dist=alt,v.prev=u,v.prevEdge=e)}}self.postMessage(dest)}}(Tesp||(Tesp={}));
//# sourceMappingURL=path.worker.js.map