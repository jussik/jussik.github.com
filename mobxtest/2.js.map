{"version":3,"sources":["webpack:///./src/common/RowStoreView.ts","webpack:///./src/components/ViewFilter.tsx","webpack:///./src/components/RowComponent.tsx","webpack:///./src/components/RowForm.tsx","webpack:///./src/components/TableTab.tsx"],"names":["RowStoreView","store","_classCallCheck","this","filter","_createClass","key","get","_this","rows","r","text","indexOf","reduce","s","active","length","__decorate","mobx_module","ViewFilter_ViewFilter","_React$Component","ViewFilter","ViewFilter_classCallCheck","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","apply","arguments","_inherits","external_React_","ViewFilter_createClass","value","e","props","view","currentTarget","className","type","placeholder","onChange","filterChanged","onClick","clearFilter","index_es","icon","free_solid_svg_icons_index_es","ViewFilter_decorate","bound","index_module","RowComponent_RowComponent","RowComponent","RowComponent_classCallCheck","RowComponent_possibleConstructorReturn","RowComponent_inherits","RowComponent_createClass","ev","onDelete","row","stopPropagation","style","cursor","toggle","free_regular_svg_icons_index_es","RowComponent_decorate","RowForm_RowForm","RowForm","RowForm_classCallCheck","RowForm_possibleConstructorReturn","name","RowForm_inherits","RowForm_createClass","rowStore","add","preventDefault","onSubmit","submit","required","nameChanged","RowForm_decorate","TableTab_TableTab","TableTab","context","TableTab_classCallCheck","TableTab_possibleConstructorReturn","call","TableTab_inherits","TableTab_createClass","remove","_this2","allIcon","allSelected","toggleAllSelected","width","map","id","removeRow","selectedLength","TableTab_decorate"],"mappings":"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","file":"2.js","sourcesContent":["import * as React from \"react\";\r\nimport { observable, computed } from \"mobx\";\r\n\r\nimport { RowStore } from \"./RowStore\";\r\nimport { TableRow } from \"./TableRow\";\r\n\r\nexport class RowStoreView {\r\n    @observable readonly store: RowStore;\r\n    @observable filter: string = \"\";\r\n    constructor(store: RowStore) {\r\n        this.store = store;\r\n    }\r\n    @computed get rows(): TableRow[] {\r\n        return this.store.rows.filter(r => r.text.indexOf(this.filter) > -1);\r\n    }\r\n    @computed get selectedLength(): number {\r\n        return this.rows.reduce((s, r) => s += r.active ? 1 : 0, 0);\r\n    }\r\n    @computed get length(): number {\r\n        return this.rows.length;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { action } from \"mobx\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { RowStoreView } from \"../common/RowStoreView\";\r\n\r\n@inject(\"view\")\r\n@observer\r\nexport class ViewFilter extends React.Component<{ view?: RowStoreView }, {}> {\r\n    @action.bound filterChanged(e: React.FormEvent<HTMLInputElement>) {\r\n        this.props.view!.filter = e.currentTarget.value;\r\n    }\r\n    @action.bound clearFilter() {\r\n        this.props.view!.filter = \"\";\r\n    }\r\n    render() {\r\n        return <div className=\"field has-addons\">\r\n            <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Filter\"\r\n                    value={this.props.view!.filter} onChange={this.filterChanged} />\r\n            </div>\r\n            <div className=\"control\">\r\n                <button className=\"button\" onClick={this.clearFilter}>\r\n                    <span className=\"icon\">\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { action } from \"mobx\";\r\nimport { observer } from \"mobx-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckSquare, faSquare } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport { TableRow } from \"../common/TableRow\";\r\n\r\n@observer\r\nexport class RowComponent extends React.Component<{ row: TableRow; onDelete: (row: TableRow) => void}, {}> {\r\n    @action.bound onDelete(ev: React.MouseEvent<HTMLElement>) {\r\n        this.props.onDelete(this.props.row);\r\n        ev.stopPropagation();\r\n    }\r\n    render() {\r\n        const row = this.props.row;\r\n        return <tr style={{ cursor: \"pointer\" }} onClick={row.toggle}>\r\n            <td><FontAwesomeIcon icon={row.active ? faCheckSquare : faSquare} /></td>\r\n            <td>{row.text}</td>\r\n            <td><a className=\"delete\" onClick={this.onDelete} /></td>\r\n        </tr>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { action, observable } from \"mobx\";\r\nimport { observer, inject } from \"mobx-react\";\r\n\r\nimport { RowStore } from \"../common/RowStore\";\r\n\r\n@inject(\"rowStore\")\r\n@observer\r\nexport class RowForm extends React.Component<{ rowStore?: RowStore }, {}> {\r\n    @observable private name: string = \"\";\r\n    @action.bound nameChanged(e: React.FormEvent<HTMLInputElement>) {\r\n        this.name = e.currentTarget.value;\r\n    }\r\n    @action.bound submit(e: React.FormEvent<HTMLFormElement>) {\r\n        this.props.rowStore!.add(this.name);\r\n        this.name = \"\";\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        return <form className=\"field has-addons\" onSubmit={this.submit}>\r\n            <div className=\"control\">\r\n                <input className=\"input\" type=\"text\" placeholder=\"Name\" required\r\n                    value={this.name} onChange={this.nameChanged} />\r\n            </div>\r\n            <div className=\"control\">\r\n                <button type=\"submit\" className=\"button\">Add</button>\r\n            </div>\r\n        </form>;\r\n    }\r\n}","import * as React from \"react\";\r\nimport { action } from \"mobx\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { IconDefinition, faCheckSquare, faMinusSquare, faSquare } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport { RowStore } from \"../common/RowStore\";\r\nimport { RowStoreView } from \"../common/RowStoreView\";\r\nimport { TableRow } from \"../common/TableRow\";\r\nimport { ViewFilter } from \"./ViewFilter\";\r\nimport { RowComponent } from \"./RowComponent\";\r\nimport { RowForm } from \"./RowForm\";\r\n\r\n@inject(\"rowStore\")\r\n@observer\r\nexport default class TableTab extends React.Component<{ rowStore?: RowStore }, {}> {\r\n    readonly view: RowStoreView;\r\n    constructor(props: {}, context: any) {\r\n        super(props, context);\r\n        this.view = new RowStoreView(this.store);\r\n    }\r\n    @action.bound removeRow(row: TableRow) {\r\n        this.store.remove(row);\r\n    }\r\n    get store(): RowStore {\r\n        return this.props.rowStore!;\r\n    }\r\n    render() {\r\n        let allIcon: IconDefinition;\r\n        switch (this.store.allSelected) {\r\n            case true: allIcon = faCheckSquare; break;\r\n            case false: allIcon = faSquare; break;\r\n            default: allIcon = faMinusSquare; break;\r\n        }\r\n\r\n        return <div>\r\n            <ViewFilter view={this.view} />\r\n            <table className=\"table is-fullwidth is-striped is-hoverable\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onClick={this.store.toggleAllSelected} style={{ width: \"1px\", cursor: \"pointer\" }}>\r\n                            <FontAwesomeIcon icon={allIcon} className={this.store.length === 0 ? \"has-text-grey-light\" : \"\"} />\r\n                        </th>\r\n                        <th>Name</th>\r\n                        <th style={{ width: \"1px\" }} />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{\r\n                    this.view.rows.map(r => <RowComponent key={r.id} row={r} onDelete={this.removeRow} />)\r\n                }</tbody>\r\n            </table>\r\n            <RowForm />\r\n            <div>{this.view.selectedLength} of {this.view.length} selected</div>\r\n        </div>;\r\n    }\r\n}"],"sourceRoot":""}